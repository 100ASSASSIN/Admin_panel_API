[{"/home/assassin/GIT/Admin_panel_API/src/index.js":"1","/home/assassin/GIT/Admin_panel_API/src/App.js":"2","/home/assassin/GIT/Admin_panel_API/src/Components/NavBar.jsx":"3","/home/assassin/GIT/Admin_panel_API/src/Components/NoMatch.js":"4","/home/assassin/GIT/Admin_panel_API/src/view_panel/view_panel.jsx":"5","/home/assassin/GIT/Admin_panel_API/src/Pages/About.jsx":"6","/home/assassin/GIT/Admin_panel_API/src/Pages/Home.jsx":"7","/home/assassin/GIT/Admin_panel_API/src/Pages/assassin.jsx":"8","/home/assassin/GIT/Admin_panel_API/src/view_panel/user.jsx":"9","/home/assassin/GIT/Admin_panel_API/src/view_panel/profi.jsx":"10","/home/assassin/GIT/Admin_panel_API/src/view_panel/orders.jsx":"11","/home/assassin/GIT/Admin_panel_API/src/view_panel/users_count.js":"12","/home/assassin/GIT/Admin_panel_API/src/view_panel/orders_count .js":"13","/home/assassin/GIT/Admin_panel_API/src/view_panel/items.js":"14","/home/assassin/GIT/Admin_panel_API/src/view_panel/items_all.jsx":"15","/home/assassin/GIT/Admin_panel_API/src/view_panel/map/maps.jsx":"16"},{"size":338,"mtime":1712693734662,"results":"17","hashOfConfig":"18"},{"size":1341,"mtime":1712819444508,"results":"19","hashOfConfig":"18"},{"size":579,"mtime":1712693734662,"results":"20","hashOfConfig":"18"},{"size":290,"mtime":1712693734662,"results":"21","hashOfConfig":"18"},{"size":3218,"mtime":1712862684946,"results":"22","hashOfConfig":"18"},{"size":3162,"mtime":1712736602130,"results":"23","hashOfConfig":"18"},{"size":3412,"mtime":1712845657179,"results":"24","hashOfConfig":"18"},{"size":3440,"mtime":1712736159616,"results":"25","hashOfConfig":"18"},{"size":2868,"mtime":1712860638276,"results":"26","hashOfConfig":"18"},{"size":858,"mtime":1712762925055,"results":"27","hashOfConfig":"18"},{"size":3619,"mtime":1712852524270,"results":"28","hashOfConfig":"18"},{"size":866,"mtime":1712817082761,"results":"29","hashOfConfig":"18"},{"size":857,"mtime":1712817402845,"results":"30","hashOfConfig":"18"},{"size":848,"mtime":1712817611114,"results":"31","hashOfConfig":"18"},{"size":2375,"mtime":1712847487941,"results":"32","hashOfConfig":"18"},{"size":0,"mtime":1712862526883,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"143nw41",{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"37"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"37"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"37"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"37"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/assassin/GIT/Admin_panel_API/src/index.js",[],[],[],"/home/assassin/GIT/Admin_panel_API/src/App.js",["88"],[],"import { lazy, Suspense } from 'react';\nimport { Routes, Route } from 'react-router-dom';\n//import NavBar from './Components/NavBar';\nconst Home = lazy(() => import('./Pages/Home'));\nconst About = lazy(() => import('./Pages/About'));\nconst NoMatch = lazy(() => import('./Components/NoMatch'));\nconst Assassin = lazy(() => import('./Pages/assassin'));\nconst View = lazy(() => import('./view_panel/view_panel'));\nconst NavBar = lazy(() => import ('./Components/NavBar'));\nconst Users = lazy(() => import ('./view_panel/user'));\nconst Profi = lazy(() => import ('./view_panel/profi'));\nconst Orders = lazy(() => import ('./view_panel/orders'));\nconst Items_ls = lazy(() => import ('./view_panel/items_all'));\n\nconst App = () => {\n\treturn (\n\t\t<>\n\t\t\t<NavBar />\n\t\t\t<Suspense fallback={<div className=\"container\">Loading...</div>}>\n\t\t\t\t<Routes>\n\t\t\t\t\t<Route path=\"/\" element={<Home />} />\n\t\t\t\t\t<Route path=\"/about\" element={<About />} />\n\t\t\t\t\t<Route path=\"/assassin\" element={<Assassin />} />\n\t\t\t\t\t<Route path=\"/panel\" element={<View />} />\n\t\t\t\t\t<Route path=\"/Users\" element={<Users />} />\n\t\t\t\t\t<Route path=\"/Profi\" element={<Profi />} />\n\t\t\t\t\t<Route path=\"/Orders\" element={<Orders />} />\n\t\t\t\t\t<Route path=\"/new\" element={<Items_ls />} />\n\t\t\t\t\t<Route path=\"*\" element={<NoMatch />} />\n\t\t\t\t</Routes>\n\t\t\t</Suspense>\n\t\t</>\n\t);\n};\n\nexport default App;\n","/home/assassin/GIT/Admin_panel_API/src/Components/NavBar.jsx",[],[],"/home/assassin/GIT/Admin_panel_API/src/Components/NoMatch.js",[],[],"/home/assassin/GIT/Admin_panel_API/src/view_panel/view_panel.jsx",["89"],[],"import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useCookies } from 'react-cookie';\nimport '../Components/nav.css';\nimport { Link } from 'react-router-dom';\nimport'../view_panel/icons/icons.css'\nimport YourComponent from \"./users_count\";\nimport YourOrders from \"./orders_count \";\nimport Items from \"./items\";\nimport  { useState, useEffect } from \"react\";\nimport ApiData from './user';\n\n\nfunction Check() {\n  const [message, setMessage] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:8000/api/ASSASSIN/\")\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        return response.json();\n      })\n      .then((data) => {\n        setMessage(data.message);\n      })\n      .catch((error) => {\n        console.error(\"There was a problem with the fetch operation:\", error);\n      });\n  }, []);\n\n  return (\n    <div className=\"assassin-container\">\n      <div id=\"msg\">\n        <h4>{message}</h4>\n      </div>\n    </div>\n  );\n}\n\nfunction View() {\n  const [cookies, setCookies, removeCookies] = useCookies(); // Add setCookies\n\n  const handleLogout = () => {\n    // Iterate over each cookie and remove it\n    for (const cookie in cookies) {\n      removeCookies(cookie);\n    }\n    // Update cookies state to an empty object\n    setCookies({});\n    // Reload the page after deleting cookies\n    window.location.replace(\"/\")\n  };\n \n  return (\n    <div id='panel'>\n      <div id=\"Dashborad\"></div>\n      <New />\n      <Link to=\"/Users\"><div id=\"Users\"><div class=\"all\"></div><h2>List of users <YourComponent /></h2></div></Link>\n      <Link to=\"/Orders\"><div id=\"orders\"><div class=\"all\"></div><h2> Total Orders <YourOrders /></h2></div></Link>\n      <Link to=\"/new\"><div id=\"items\"><div class=\"all\"></div><h2>list of Items <Items /></h2></div></Link>\n      <Link to=\"/Profi\"><div id=\"Profi\"><h2><div class=\"all\"></div>Profile</h2></div></Link>\n     <div id=\"view\">\n     <Check />\n\n<h4>1. **Product Management**: Allow admins to add, edit, and delete products. They can specify product details like name, description, price, quantity, images, categories, and tags.</h4>\n\n<h4>2. **Inventory Management**: Provide a dashboard to monitor inventory levels, receive notifications for low stock, and manage replenishment orders.</h4>\n\n<h4>3. **Order Management**: Enable admins to view and manage orders, including order status updates, order cancellation, and order history. They can also generate invoices and packing slips.</h4>\n\n<h4>4. **Customer Management**: Allow admins to manage customer accounts, view customer details, track customer orders, and handle customer inquiries or support requests.\n\n</h4>\n     </div>\n     <div id=\"view2\"></div>\n    \n     <div id=\"ttt\"></div>\n     <div id=\"view3\">\n     \n      <ApiData/></div>\n</div>\n\n  );\n}\nclass  New extends React.Component {\n  render() {\n    return (\n      <div className=\"application\">\n        <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>My ASSASSIN</title>\n          <link rel=\"shortcut icon\" href=\"https://cdn.oaistatic.com/_next/static/media/favicon-32x32.be48395e.png\" />\n        </Helmet>\n      </div>\n    );\n  }\n};\n\nexport default View;\n","/home/assassin/GIT/Admin_panel_API/src/Pages/About.jsx",[],[],"/home/assassin/GIT/Admin_panel_API/src/Pages/Home.jsx",["90","91"],[],"import { Link } from 'react-router-dom';\nimport '../Components/nav.css';\nconst Home= () => {\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<div className=\"banner-container\">\n\t\t\t\t\t<h2 style={{position:'absolute', top:'90px', paddingBottom:'40px'}}>ASSASSIN<br></br></h2>\n\t\t\t\t\t<Link to=\"/assassin\">\n\t\t\t\t\t\t<div className=\"btn\" style={{position:'absolute', top:'100px', left:'570px', top:'120px'}}>Enter admin panel</div>\n\t\t\t\t\t</Link>\n\t\t\t\t<div id='admin'></div>\n\t\t\t\t<p><h2 id='p2'>functionalities you might have in your shopping admin panel:</h2>\n\n<h4>1. **Product Management**: Allow admins to add, edit, and delete products. They can specify product details like name, description, price, quantity, images, categories, and tags.</h4>\n\n<h4>2. **Inventory Management**: Provide a dashboard to monitor inventory levels, receive notifications for low stock, and manage replenishment orders.</h4>\n\n<h4>3. **Order Management**: Enable admins to view and manage orders, including order status updates, order cancellation, and order history. They can also generate invoices and packing slips.</h4>\n\n<h4>4. **Customer Management**: Allow admins to manage customer accounts, view customer details, track customer orders, and handle customer inquiries or support requests.\n\n<h4>5. **Category and Tag Management**: Provide tools to create, edit, and organize product categories and tags for easier navigation and filtering on the storefront.</h4>\n\n<h4>6. **Discounts and Promotions**: Enable admins to create and manage discount codes, coupons, promotional campaigns, and special offers to attract and retain customers.</h4>\n\n<h4>7. **Analytics and Reporting**: Offer insights into sales performance, revenue trends, popular products, customer demographics, and website traffic. Generate reports for analysis and decision-making.</h4>\n\n<h4>8. **User Permissions and Roles**: Implement role-based access control to restrict access to certain features or data based on user roles (e.g., admin, manager, staff).</h4>\n\n<h4>9. **Content Management**: Allow admins to manage website content such as pages, blog posts, FAQs, and banners to keep the site updated and engaging.</h4>\n\n<h4>10. **Shipping and Tax Configuration**: Provide settings to configure shipping options, shipping rates, tax rates, and delivery zones to accurately calculate shipping costs for orders.</h4>\n\n<h4>11. **Payment Gateway Integration**: Integrate payment gateways to securely process online payments from customers. Admins can configure payment methods and view transaction history.</h4>\n\n<h4>12. **Security and Compliance**: Implement security measures like HTTPS, encryption, and user authentication to protect sensitive data. Ensure compliance with regulations such as GDPR or PCI DSS.</h4>\n\n<h4>13. **Localization and Multi-language Support**: Support multiple languages and currencies to cater to a global audience. Allow admins to manage translations and localize content.</h4>\n\n<h4>14. **Email Notifications**: Set up automated email notifications for order confirmations, shipping updates, password resets, and other important events to keep customers informed.</h4>\n\n<h4></h4>15. **Customization and Extensibility**: Provide options for customization and integration with third-party tools or extensions to extend the functionality of the admin panel according to specific business needs.</h4></p>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Home;\n","/home/assassin/GIT/Admin_panel_API/src/Pages/assassin.jsx",[],[],"/home/assassin/GIT/Admin_panel_API/src/view_panel/user.jsx",["92"],[],"import React, { useState, useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useCookies } from 'react-cookie';\nimport './icons/tab.css';import './icons/tab.css';\nconst navigate = () => {\n    window.location.replace(\"/assassin\");\n}\n\nfunction ApiData() {\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n        // Fetch data from the API\n        fetch('http://localhost:8000/api/api/')\n            .then(response => response.json())\n            .then(data => {\n                // Extracting the message array from the API response\n                const messages = data[0].message;\n                setData(messages);\n            })\n            .catch(error => {\n                console.error('Error fetching data:', error);\n            });\n    }, []);\n    return (\n        <div>\n            <div id='ord'>\n            <table style={tableStyle}>\n                <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>Name</th>\n                        <th>mail</th>\n                        <th>contact</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {data.map((item, index) => (\n                        <tr key={index}>\n                            <td style={cellStyle}>{item[0]}</td>\n                            <td style={cellStyle}>{item[1]}</td>\n                            <td style={cellStyle}>{item[2]}</td>\n                            <td style={cellStyle}>{item[4]}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n            </div>\n            <button id=\"ut2\" type=\"submit\" style={buttonStyle} onClick={() => navigate(-1)}>\n                Go Back\n            </button>\n        </div>\n    );\n}\n\n// Internal CSS styles\nconst tableStyle = {\n    borderCollapse: 'collapse',\n    width: '100%',\n    border: '1px solid #ddd', // Adding border to the table\n};\n\nconst cellStyle = {\n    border: '1px solid #ddd', // Adding border to table cells\n    padding: '8px', // Adding padding to table cells\n};\n\nconst buttonStyle = {\n    padding: '10px 20px',\n    backgroundColor: '#007bff',\n    color: '#fff',\n    border: 'none',\n    borderRadius: '4px',\n    cursor: 'pointer',\n};\n\n\nconst Users = () => {\n    const [cookies] = useCookies(['user']);\n\n    useEffect(() => {\n        checkUser();\n    }, [cookies.user]); // Include cookies.user in the dependency array\n\n    function checkUser() {\n        if (!cookies.user) {\n            // User is not logged in, redirect to '/assassin'\n            window.location.replace(\"/assassin\");\n        }\n    }\n\n    return (\n        <div>\n            <Helmet>\n                <title>Users</title>\n            </Helmet>\n            <h1 style={{padding:'15px'}}>List of Users</h1>\n            <ApiData />\n        </div>\n    );\n}\n\nexport default Users;\n","/home/assassin/GIT/Admin_panel_API/src/view_panel/profi.jsx",[],[],"/home/assassin/GIT/Admin_panel_API/src/view_panel/orders.jsx",["93"],[],"import React, { useState, useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useCookies } from 'react-cookie';\nimport './icons/tab.css';\nconst navigate = () => {\n    window.location.replace(\"/assassin\");\n}\n\nfunction ApiData() {\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n        // Fetch data from the API\n        fetch('http://127.0.0.1:8000/api/Orders/')\n            .then(response => response.json())\n            .then(data => {\n                // Extracting the message array from the API response\n                const messages = data[0].message;\n                setData(messages);\n            })\n            .catch(error => {\n                console.error('Error fetching data:', error);\n            });\n    }, []);\n    return (\n        <div>\n            <div id='ord'>\n            <table style={tableStyle}>\n                <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>user id</th>\n                        <th>Item id</th>\n                        <th>Status</th>\n                        <th>User name</th>\n                        <th>date</th>\n                        <th>Total price</th>\n                        <th>Item name</th>\n                        <th>Number</th>\n                        <th>Address</th>\n                        <th>Email</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {data.map((item, index) => (\n                        <tr key={index}>\n                            <td style={cellStyle}>{item[0]}</td>\n                            <td style={cellStyle}>{item[1]}</td>\n                            <td style={cellStyle}>{item[2]}</td>\n                            <td style={cellStyle}>{item[3]}</td>\n                            <td style={cellStyle}>{item[6]}</td>\n                            <td style={cellStyle}>{item[7]}</td>\n                            <td style={cellStyle}>{item[9]}</td>\n                            <td style={cellStyle}>{item[10]}</td>\n                            <td style={cellStyle}>{item[11]}</td>\n                            <td style={cellStyle}>{item[12]}</td>\n                            <td style={cellStyle}>{item[13]}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n            </div>\n            <button id=\"ut2\" type=\"submit\" style={buttonStyle} onClick={() => navigate(-1)}>\n                Go Back\n            </button>\n        </div>\n    );\n}\n\n// Internal CSS styles\nconst tableStyle = {\n    borderCollapse: 'collapse',\n    width: '100%',\n    padding: '5px',\n\n    border: '1px solid #ddd', // Adding border to the table\n};\n\nconst cellStyle = {\n    border: '1px solid #ddd', // Adding border to table cells\n    padding: '8px', // Adding padding to table cells\n};\n\nconst buttonStyle = {\n    padding: '10px 20px',\n    backgroundColor: '#007bff',\n    color: '#fff',\n    border: 'none',\n    borderRadius: '4px',\n    cursor: 'pointer',\n};\n\n\nconst Orders = () => {\n    const [cookies] = useCookies(['user']);\n\n    useEffect(() => {\n        checkUser();\n    }, [cookies.user]); // Include cookies.user in the dependency array\n\n    function checkUser() {\n        if (!cookies.user) {\n            // User is not logged in, redirect to '/assassin'\n            window.location.replace(\"/assassin\");\n        }\n    }\n\n    return (\n        <div>\n            <Helmet>\n                <title>AD Orders</title>\n            </Helmet>\n            <h1 style={{padding:'15px'}}>Orders</h1>\n            <ApiData />\n        </div>\n    );\n}\n\nexport default Orders;\n","/home/assassin/GIT/Admin_panel_API/src/view_panel/users_count.js",[],[],"/home/assassin/GIT/Admin_panel_API/src/view_panel/orders_count .js",[],[],"/home/assassin/GIT/Admin_panel_API/src/view_panel/items.js",[],[],"/home/assassin/GIT/Admin_panel_API/src/view_panel/items_all.jsx",[],[],"/home/assassin/GIT/Admin_panel_API/src/view_panel/map/maps.jsx",[],[],{"ruleId":"94","severity":1,"message":"95","line":28,"column":34,"nodeType":"96","messageId":"97","endLine":28,"endColumn":46},{"ruleId":"98","severity":1,"message":"99","line":45,"column":9,"nodeType":"100","messageId":"101","endLine":45,"endColumn":21},{"ruleId":"102","severity":1,"message":"103","line":9,"column":84,"nodeType":"104","messageId":"105","endLine":9,"endColumn":87},{"ruleId":"106","severity":1,"message":"107","line":42,"column":1,"nodeType":"96","endLine":42,"endColumn":5},{"ruleId":"108","severity":1,"message":"109","line":83,"column":8,"nodeType":"110","endLine":83,"endColumn":22,"suggestions":"111"},{"ruleId":"108","severity":1,"message":"109","line":99,"column":8,"nodeType":"110","endLine":99,"endColumn":22,"suggestions":"112"},"react/jsx-pascal-case","Imported JSX component Items_ls must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","no-unused-vars","'handleLogout' is assigned a value but never used.","Identifier","unusedVar","no-dupe-keys","Duplicate key 'top'.","ObjectExpression","unexpected","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkUser'. Either include it or remove the dependency array.","ArrayExpression",["113"],["114"],{"desc":"115","fix":"116"},{"desc":"115","fix":"117"},"Update the dependencies array to be: [checkUser, cookies.user]",{"range":"118","text":"119"},{"range":"120","text":"119"},[2379,2393],"[checkUser, cookies.user]",[3132,3146]]